{%- render '@needs-script', entries: 'component-facets' -%}
{% liquid
  assign filter_params = ''
  assign active_filters_size = 0
  assign show_ingrid_items = section.settings.show_ingrid_items

  for filter in collection.filters
    if filter.active_values.size > 0
      assign show_ingrid_items = false
      assign active_filters_size = active_filters_size | plus: filter.active_values.size

      if filter_params != ''
        assign filter_params = filter_params | append: '&'
      endif

      for value in filter.active_values
        assign filter_params = filter_params | append: filter.param_name | append: '=' | append: value.value

        unless forloop.last
          assign filter_params = filter_params | append: '&'
        endunless
      endfor
    endif
  endfor

  if show_ingrid_items
    assign colleciton_ingrids = collection.metafields.custom.in_grid_content.value

    if colleciton_ingrids == blank
      assign show_ingrid_items = false
    else
      assign collection_ingrids_mobile_positions = colleciton_ingrids | map: 'grid_position_small_screen' | uniq
      assign collection_ingrids_positions = colleciton_ingrids | map: 'grid_position' | uniq

      assign count_desktop = 0
      assign adjusted_index_desktop = 0
      assign occupied_positions_desktop = ''

      assign count_mobile = 0
      assign adjusted_index_mobile = 0
      assign occupied_positions_mobile = ''
    endif
  endif
%}

{%- capture sort_dropdown -%}
  <facet-filters-form
    section-id='facet-sort'
  >
    <form>
      {% assign label = 'sections.collection_template.facets.sort_by_label' | t %}
      <div class="flex items-center">
        <span class="whitespace-pre text-body">{{ label }}</span>
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        {% capture options %}
          {%- for option in collection.sort_options -%}
            <option
              value="{{ option.value | escape }}"
              {% if option.value == sort_by %}
                selected="selected"
              {% endif %}
            >
              {{ option.name | escape }}
            </option>
          {%- endfor -%}
        {% endcapture %}
        {%- render 'inline-select', kind: 'select', name: 'sort_by', id: 'SortBy', options: options, label: label, inline: true, attributes: 'onchange="this.form?.submit()"' -%}
      </div>
    </form>
  </facet-filters-form>
{%- endcapture %}

<div id='collection' data-section-id='{{- section.id -}}'>
  <div section-id='{{- section.id -}}'>
    {%- paginate collection.products by section.settings.products_per_page -%}
      <div class='container mt-[40px]'>
        <aside
          class='block'
          id='main-collection-filters'
          data-id='{{ section.id }}'
          {% comment %}
            Remove 'sub-section-id' if you don't need to update the filters
            with the product grid. Filters are updated onChange already.

            Keep in mind any DOM tree changes here, like `active_filters_size`,
            wouldn't be updated if you remove the `sub-section-id`.
          {% endcomment %}
          sub-section-id='main-collection-filters'
        >
          {% capture drawer_filters %}
            {% render 'facets', results: collection, prefix: "mobile" %}
          {% endcapture %}

          {% capture filters_button %}Filter By ({{ active_filters_size }}){% endcapture %}

          <div>
            {% render 'modal-dialog-toggle',
              modal_id: 'filter-drawer-dialog',
              label: filters_button,
              class: 'w-full block lg:hidden',
              toggle_class: 'w-full'
            %}
          </div>

          {% liquid
            assign title = 'Filters'
            render 'modal-dialog', id: 'filter-drawer-dialog', anchor: 'left', content: drawer_filters, type: 'drawer', close_on_backdrop_click: true, title: title
          %}
        </aside>

        <div class='grid lg:grid-cols-4 gap-[20px]'>
          <div class="hidden lg:block">
            <p class="h6">Filter By</p>
            {% render 'facets', results: collection, prefix: 'desktop' %}
          </div>
          <div class='lg:col-span-3' sub-section-id='product-grid-container' id='product-grid-container'>
            <div class='flex items-center justify-between mb-[15px] lg:mb-[20px] lg:border-b lg:border-b-t-line-break'>
              {{ sort_dropdown }}
              <p>
                {{ collection.products_count }}
                {{ collection.products_count | pluralize: 'Product', 'Products' }}
              </p>
            </div>
            {% render 'c-product-grid' %}
          </div>
        </div>
      </div>
    {%- endpaginate -%}
  </div>
</div>

{% schema %}
{
  "name": "Product Grid + Filters",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "Products per page"
    },
    {
      "type": "checkbox",
      "id": "show_ingrid_items",
      "label": "Show ingrid items",
      "default": true
    }
  ]
}
{% endschema %}
