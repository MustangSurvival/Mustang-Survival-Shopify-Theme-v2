{% comment %}
  Renders a swatch component.
  Accepts:
  - swatch: {Object} a swatch object
  - shape: {String} swatch shape. Accepts 'square', defaults to circle.
  - class: {String} additional class names (optional)

  Usage:
  {% render 'swatch',
    swatch: value.swatch
    shape: 'square'
  %}
{% endcomment %}

{%- liquid
  assign swatch_value = null
  if swatch.image
    assign image_url = swatch.image | image_url: width: 50
    assign swatch_value = 'url(' | append: image_url | append: ')'
    assign swatch_focal_point = swatch.image.presentation.focal_point
  elsif swatch.color
    assign swatch_value = 'rgb(' | append: swatch.color.rgb | append: ')'
  endif
-%}

{% capture swatch_class %}
  block max-w-full overflow-clip relative aspect-square bg-cover bg-origin-border
  border border-p-lightest border-solid
  w-[16px] ml-px
  bg-[position:var(--swatch-focal-point,_initial)]
  bg-[--swatch--background]
  cursor-pointer
  
  group-has-[:disabled]/swatch:opacity-30
  
  group-has-[:checked]/swatch:shadow-[0_0_0_1px_black]
  group-focus-within/swatch:shadow-[0_0_0_4px_black]
{% endcapture %}

<span
  {% if swatch_value %}
    class='{{ swatch_class }} {{ class }}'
    style='--swatch--background: {{ swatch_value }};{% if swatch_focal_point %} --swatch-focal-point: {{ swatch_focal_point }};{% endif %}'
  {% else %}
    class='border-dashed border-t-foreground-secondary'
  {% endif %}
>
  {%- if swatch.image -%}
    {%- render 'image',
      image: swatch.image,
      width: 40,
      widths: '30,60,90,120',
      loading: 'lazy',
      class: 'absolute inset-0 w-full h-full'
    -%}
  {%- endif -%}
</span>
